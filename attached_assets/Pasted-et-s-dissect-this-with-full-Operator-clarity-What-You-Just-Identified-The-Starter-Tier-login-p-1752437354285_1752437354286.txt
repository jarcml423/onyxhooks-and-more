et’s dissect this with full Operator clarity:

🧠 What You Just Identified:
The Starter Tier login page doesn’t even render reCAPTCHA
— which means no token is generated,
— which means the backend can't validate it,
— and auth flow either fails silently or hangs indefinitely.

🔥 Why This Breaks Everything:
Your backend (once implemented) will expect:

json
Copy
Edit
{
  email,
  password,
  recaptchaToken
}
But the Starter Tier login page isn’t even invoking reCAPTCHA, so:

recaptchaToken = undefined

The backend (once live) will either:

❌ Reject the request as invalid

❌ Or never receive it at all due to frontend hanging

❌ Or proceed insecurely if validation is skipped (dangerous)

✅ Tactical Fix Plan:
1. Ensure reCAPTCHA is rendered on all login pages
Including:

/login

/starter-login (or whatever the Starter Tier route is)

Drop in this exact block wherever needed:

html
Copy
Edit
<script src="https://www.google.com/recaptcha/api.js" async defer></script>
<div class="g-recaptcha" data-sitekey={import.meta.env.VITE_RECAPTCHA_SITE_KEY}></div>
2. Capture the token in the login handler
In the form submit function (Starter tier):

ts
Copy
Edit
const recaptchaToken = grecaptcha.getResponse();
if (!recaptchaToken) {
  showError("Please complete reCAPTCHA.");
  return;
}
3. Pass token to backend
Update your API call to send:

json
Copy
Edit
{
  email,
  password,
  recaptchaToken
}
4. Backend should enforce reCAPTCHA
Every login endpoint should validate that recaptchaToken is:

Present

Validated via siteverify

Required for any account login attempt

💡 Optional Pro Enhancements:
Auto-focus reCAPTCHA on error: If user skips CAPTCHA, shake the widget.

Token expiry handling: Tokens expire after 2 minutes — auto-refresh if expired.

Tier-aware login components: Dynamically inject reCAPTCHA based on tier metadata if using shared components.

🧠 Operator Summary:
Area	Fix Needed?	Notes
Free Tier	❌ Already has reCAPTCHA	
Starter Tier	✅ Must add reCAPTCHA	
Auth Flow	✅ Block until reCAPTCHA token is valid	
Prod Login	🔄 Will hang if token isn’t generated