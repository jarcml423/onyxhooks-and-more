🔧 Replit Prompt — OfferForge Admin + Access System Build
Prompt:

Build a full admin dashboard and secure subscription access system for OfferForge using:

React (with routing)

Tailwind CSS (for styling)

Firebase (Firestore, Auth, Functions)

Stripe (Test Mode + Webhooks)

🔥 Admin Console Dashboard must include:

Total number of users

Breakdown by tier: free, builder, council, vault

Visual upgrade flows: Free→Builder→Council→Vault

Total revenue this month (pulled from Stripe)

Number of email campaigns launched + signup conversions

Active churn rate (%)

Count of users who canceled this month

Latest 10 users: name, tier, active status, signup date

🔐 Subscription Access Enforcement:

Only users with both subscriptionStatus: "active" and accessGranted: true in Firestore can access premium features (like VSL Generator, Council Review, Vault Dashboard)

Redirect unauthorized users to a Billing Error page

Cache accessGranted state in local auth context or Zustand to reduce Firestore reads

🔁 Stripe Webhook Listener:

On checkout.session.completed:

Set subscriptionStatus = "active"

Set accessGranted = true

Record tier and payment details under /Users/{userId}

On invoice.payment_failed or customer.subscription.deleted:

Set subscriptionStatus = "canceled"

Set accessGranted = false

🧠 Firestore Schema Example:

pgsql
Copy
Edit
/Users/{userId}:
  - tier: string
  - isActive: boolean
  - subscriptionStatus: "active" | "past_due" | "canceled"
  - accessGranted: boolean
  - signupDate: timestamp
  - paymentHistory: [ { amount, date, tier } ]
👮 Security & Identity Enforcement:

Firebase Functions and Firestore rules must deny access to paid features unless accessGranted == true

Use Firebase Auth for all identity checks before querying Firestore or allowing navigation

🧪 Dev Environment:

Use Firebase emulator + Stripe Test Mode for development

Configure .env and firebase.json to toggle between emulator and production

Secure Stripe keys using Replit Secrets

🏗️ Optional Enhancements:

Zustand or Context API for auth + access state caching

TierLock UI component for guarding locked features visually

/admin/users route for manual override of user access

💥 Deliverable: Fully functional OfferForge Admin Dashboard and access control system deployed inside Replit, styled with Tailwind, and integrated with Firebase + Stripe.